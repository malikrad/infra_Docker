Description: Thoughtworks ec2,s3 task

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    KeyPair:
        Description: An environment name that will be prefixed to resources
        Type: String

Resources:

  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y 
          sudo apt -y install default-jre 
          sudo apt -y install default-jdk 
          sudo apt-get install unzip awscli -y 
          cd /home
          aws s3 cp s3://content-700/front-end.jar . 
          aws s3 cp s3://content-700/newsfeed.jar .
          aws s3 cp s3://content-700/quotes.jar .
          aws s3 cp s3://content-700/serve.py .
          aws s3 cp s3://content-700/static.tgz .
          tar -xvzf static.tgz
          export APP_PORT=8080 >> /etc/profile 
          export STATIC_URL="http://localhost:8000">> /etc/profile 
          export QUOTE_SERVICE_URL="http://localhost:8081" >> /etc/profile 
          export NEWSFEED_SERVICE_URL="http://localhost:8082" >> /etc/profile 
          export NEWSFEED_SERVICE_TOKEN="T1&eWbYXNWG1w1^YGKDPxAWJ@^et^&kX" >> /etc/profile 
          java -jar front-end.jar & 
          export APP_PORT=8081 >> /etc/profile 
          nohup java -jar quotes.jar & 
          export APP_PORT=8082 >> /etc/profile 
          nohup java -jar newsfeed.jar & 
          nohup ./serve.py & 
          #sudo apt-get install apache2 -y 
          #sudo systemctl start apache2.service 
          #cd ..
          #cd /var/www/html
          echo "Demo scriptuserdata Web Server Up and Runninggfgfgfgfgfgfgfgfgf!" > index.html
          
          
      ImageId: ami-0ac73f33a1888c64a
      IamInstanceProfile:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-PROF-RULES" 
      SecurityGroups:
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-WEB-SG"
      InstanceType: t3.small
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: "10"

  WebAppGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: 
        - Fn::ImportValue:
            !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchConfigurationName:
        Ref: WebAppLaunchConfig
      MinSize: "2"
      MaxSize: "6"
      TargetGroupARNs:
        - Ref: WebAppTargetGroup


  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
      LoadBalancerArn:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-APPLB"
      Port: "80"
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref "WebAppTargetGroup"
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref "Listener"
      Priority: 1

  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /ping
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"



  


